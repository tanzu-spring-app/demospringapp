apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: demospringapp
    appGroup: MySpringApp
  name: demospringapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demospringapp
  strategy: {}
  template:
    metadata:
      labels:
        app: demospringapp
    spec:
      dnsPolicy: ClusterFirst
      nodeSelector:
        instance-type: t3.small
      restartPolicy: Always
      containers:
      - image: 111370797202.dkr.ecr.us-west-2.amazonaws.com/demospringapp/apigateway:2
        name: demospringapp
        ports:
        - containerPort: 8080
        env:
          - name: STUDENT_HOST
            value: student-app-service
          - name: STUDENT_PORT
            value: "8081"
          - name: EMPLOYEE_HOST
            value: employee-app-service
          - name: EMPLOYEE_PORT
            value: "8082"
          - name: MESSAGE_HOST
            value: messaging-queue-service
          - name: MESSAGE_PORT
            value: "8083"
          - name: FEIGN_HOST
            value: connector-app-service
          - name: FEIGN_PORT
            value: "8084"
          - name: EUREKA_HOST
            value: service-registry-service
          - name: EUREKA_PORT
            value: "8761"
          - name: ZIPKIN_HOST
            value: zipkin-tracing-service
          - name: ZIPKIN_PORT
            value: "9411"
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        resources: {}
status: {}
